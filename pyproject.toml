[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2", "setuptools>=42", "setuptools_scm[toml]>=6.2"]
build-backend = "scikit_build_core.build"

[project]
name = "tomathml"
dynamic = ["version"]
description = "A small library to convert a text description of math to content MathML."
readme = "README.rst"
requires-python = ">=3.8"
authors = [
    { name = "Hugh Sorby", email = "h.sorby@auckland.ac.nz" },
]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
]

[project.urls]
Homepage = "https://github.com/hsorby/tomathml"

[tool.scikit-build]
# Protect the configuration against future changes in scikit-build-core
minimum-version = "0.10"

# Setuptools-style build caching in a local directory
build-dir = "build/{wheel_tag}"

# Build stable ABI wheels for CPython 3.12+
wheel.py-api = "cp312"

# Components to install for wheel.
install.components = ["wheel"]

metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
# build.verbose = true
# logging.level = "INFO"
# metadata = [
  # {version = "scikit_build_core.metadata.setuptools_scm"}
# ]

# [tool.scikit-build.metadata]
# version = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
# Optional: you can set fallback_version if no tag is found
# fallback_version = "0.0.1"
# version_scheme = "guess-next-dev"
local_scheme = "dirty-tag"

[tool.cibuildwheel]
# Necessary to see build output from the actual compilation
build-verbosity = 1

# Optional: run pytest to ensure that the package was correctly built
# test-command = "pytest {project}/tests"
# test-requires = "pytest"

# Needed for full C++17 support on macOS
[tool.cibuildwheel.macos.environment]
MACOSX_DEPLOYMENT_TARGET = "13.3"
